# Generated by Django 2.0.3 on 2018-04-03 09:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('audit_entry_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('guild_id', models.BigIntegerField()),
                ('action', models.TextField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('category', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'audit_log',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='AuditLogCrawl',
            fields=[
                ('guild_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('last_audit_entry_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'audit_log_crawl',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ChannelCategories',
            fields=[
                ('category_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('position', models.IntegerField()),
                ('is_deleted', models.BooleanField()),
                ('is_nsfw', models.BooleanField()),
                ('changed_roles', models.TextField()),
                ('guild_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'channel_categories',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Channels',
            fields=[
                ('channel_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('is_nsfw', models.BooleanField()),
                ('is_deleted', models.BooleanField()),
                ('position', models.IntegerField()),
                ('topic', models.TextField(blank=True, null=True)),
                ('changed_roles', models.TextField()),
                ('guild_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'channels',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Emojis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji_id', models.BigIntegerField()),
                ('emoji_unicode', models.CharField(max_length=7)),
                ('is_custom', models.BooleanField()),
                ('is_managed', models.NullBooleanField()),
                ('is_deleted', models.BooleanField()),
                ('name', models.TextField()),
                ('category', models.TextField()),
                ('roles', models.TextField(blank=True, null=True)),
                ('guild_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'emojis',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Mentions',
            fields=[
                ('mentioned_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('type', models.TextField()),
                ('guild_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'mentions',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('message_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('message_type', models.TextField()),
                ('system_content', models.TextField()),
                ('content', models.TextField()),
                ('embeds', models.TextField()),
                ('attachments', models.IntegerField()),
                ('webhook_id', models.BigIntegerField(blank=True, null=True)),
                ('user_id', models.BigIntegerField()),
                ('guild_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'messages',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Pins',
            fields=[
                ('pin_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('guild_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'pins',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Reactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.BigIntegerField()),
                ('emoji_id', models.BigIntegerField()),
                ('emoji_unicode', models.CharField(max_length=7)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('guild_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'reactions',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('role_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('color', models.IntegerField()),
                ('raw_permissions', models.BigIntegerField()),
                ('guild_id', models.BigIntegerField()),
                ('is_hoisted', models.BooleanField()),
                ('is_managed', models.BooleanField()),
                ('is_mentionable', models.BooleanField()),
                ('is_deleted', models.BooleanField()),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'roles',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Typing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('guild_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'typing',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('discriminator', models.IntegerField()),
                ('avatar', models.TextField(blank=True, null=True)),
                ('is_deleted', models.BooleanField()),
                ('is_bot', models.BooleanField()),
            ],
            options={
                'db_table': 'users',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Guilds',
            fields=[
                ('guild_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('owner_id', models.ForeignKey('Users', on_delete=models.DO_NOTHING, db_column='owner_id')),
                ('name', models.TextField()),
                ('icon', models.TextField()),
                ('voice_region', models.TextField()),
                ('afk_channel_id', models.BigIntegerField(blank=True, null=True)),
                ('afk_timeout', models.IntegerField()),
                ('mfa', models.BooleanField()),
                ('verification_level', models.TextField()),
                ('explicit_content_filter', models.TextField()),
                ('features', models.TextField()),
                ('splash', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'guilds',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='RoleMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey('Roles', on_delete=models.DO_NOTHING)),
                ('user', models.ForeignKey('Users', on_delete=models.DO_NOTHING)),
                ('guild_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'role_membership',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='VoiceChannels',
            fields=[
                ('voice_channel_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('is_deleted', models.BooleanField()),
                ('position', models.IntegerField()),
                ('bitrate', models.IntegerField()),
                ('user_limit', models.IntegerField()),
                ('changed_roles', models.TextField()),
                ('guild_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'voice_channels',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='AuditLogChanges',
            fields=[
                ('audit_entry', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='stats.AuditLog')),
                ('guild_id', models.BigIntegerField()),
                ('state', models.TextField()),
                ('attributes', models.TextField()),
            ],
            options={
                'db_table': 'audit_log_changes',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='GuildMembership',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='stats.Users')),
                ('guild_id', models.BigIntegerField()),
                ('is_member', models.BooleanField()),
                ('joined_at', models.DateTimeField(blank=True, null=True)),
                ('nick', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'guild_membership',
                'managed': settings.IS_TESTING,
            },
        ),
    ]
